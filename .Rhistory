x=1
clear
clc
rm(list = ls())
x=1
rm(list = ls())
install.packages("dplyr")
install.packages("tidyverse")
install.packages("readxl")
install.packages("ggplot2")
install.packages("rtweet")
library(dplyr)
install.packages("dplyr")
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
library(readxl)
library(ggplot2)
library(rtweet)
getwd()
#cek dir
getwd()
#change dir
setwd("D:/Data/Riset/R for Data Analysis in Social Science (Extract Data KPU & Twitter Petinggi Negara)")
getwd()
dir()
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
#json execution
kpu_result <- fromJSON("https://pilkada2017.kpu.go.id/api/1/hasil.json") #data hasil pilkada 2017 dari kpu.go.id
kpu_result
View(kpu_result)
View(kpu_result)
#only show DKI Jakarta
DKI_Jakarta <- subset(kpu_result, subset = namaPropinsi == "DKI JAKARTA")
View(DKI_Jakarta)
View(DKI_Jakarta)
#total vote
total_vote_DKI <- Sum(DKI_Jakarta["JumlahSuara"])
#total vote
total_vote_DKI <- Sum(DKI_Jakarta["jumlahSuara"])
View(DKI_Jakarta)
View(DKI_Jakarta)
#total vote
total_vote_DKI <- sum(DKI_Jakarta["jumlahSuara"])
total_vote_DKI
()
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd,
size = jumlahSuara)) +
geom_line(size=4)+geom_point()
print(votings)
theme(axis.text.x = element_text(angel=90, hjust = 1, size 12, color="darkred"))
theme(axis.text.x = element_text(angel=90, hjust = 1, size = 12, color="darkred"))
theme(axis.text.x = element_text(angel=90, hjust = 1, size = 12, color="darkred"))
theme(axis.text.x = element_text(angel = 90, hjust = 1, size = 12, color="darkred"))
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd,
size = jumlahSuara)) +
geom_line(size=4)+geom_point()
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd,
size = jumlahSuara)) +
geom_line(size=4)+geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
print(votings)
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_bar +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar(stat="identity", width=0.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar(stat="identity", color = namaKd , width=0.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar(stat="identity",fill="white", width=0.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar(stat="identity",fill="white", width=0.5) +
geom_text(aes(label=len), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar(stat="identity",fill="white", width=0.5) +
geom_text(aes(label=len), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
#Plot for governor votings
votings <- ggplot(data = DKI_Jakarta,
mapping = aes(x = namaKd,
y = jumlahSuara,
color = namaKd)) +
geom_line(size=4)+geom_bar(stat="identity",fill="white", width=0.5) +
geom_text(aes(label=jumlahSuara), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(votings)
View(DKI_Jakarta)
install.packages("httpuv")
install.packages("readr")
install.packages("readr")
install.packages("readr")
install.packages("readr")
install.packages("readr")
install.packages("glue")
install.packages("glue")
install.packages("glue")
install.packages("glue")
install.packages("glue")
install.packages("backports")
library(dplyr)
library(dplyr)
library(tidyverse)
library(httpuv)
library(ggplot2)
install.packages("dplyr")
library(dplyr)
library(tidyverse)
library(httpuv)
library(ggplot2)
library(rtweet)
library(readr)
library(glue)
library(backports)
#stream tweets
stream_tweets("")
corona <- search_tweets("#corona", n=500, include_rts = TRUE, lang = "id")
View(corona)
View(corona)
print(corona)
jokowi <- get_timeline("@jokowi", n=100)
View(jokowi)
View(jokowi)
# information twitter user
pemerintah <-lookup_users(c("jokowi", "Menlu_RI", "mohmahfudmd"))
View(pemerintah)
View(pemerintah)
#cek followers
followers <- pemerintah[.c("screen_name", "followers_count")]
#cek followers
followers <- pemerintah[,c("screen_name", "followers_count")]
View(followers)
View(followers)
followers_twitter <- ggplot(data = followers,
mapping = aes(x = screen_name,
y = followers_count,
color = screen_name)) +
geom_line(size=4)+geom_bar(stat="identity",fill="white", width=0.5) +
geom_text(aes(label=followers_count), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, color="darkred"))
print(followers_twitter)
View(corona)
View(corona)
View(corona)
View(corona)
View(corona)
View(corona)
#save extract data twitter to csv
write.csv(rbind(corona), file = "hastag_corona_twitter.csv", row.names = T)
#save extract data twitter to csv
write.csv(corona, file = "hastag_corona_twitter.csv")
View(corona)
View(corona)
corona['column'] = corona['column'].fillna(value)
corona[is.na(corona)] <- NULL
corona[is.na(corona)] <- 0
View(corona)
corona[is.na(corona)] <- -
#save extract data twitter to csv
write.csv(corona, file = "hastag_corona_twitter.csv")
corona[is.na(corona)] <- "-"
corona[is.na(corona)] <- 0
replace(corona,is.nan(corona),0)
corona[ is.nan(corona) ] <- 0
corona[ is.nan(corona) ] <- 0
View(corona)
View(corona)
#save extract data twitter to csv
write.csv(corona, file = "hastag_corona_twitter.csv")
#save extract data twitter to csv
write.csv(jokowi, file = "tweet_Mr_Jokowi.csv")
#save extract data twitter to csv
write.csv(jokowi, file = "tweet_Mr_Jokowi.csv", row.names = FALSE)
#save extract data twitter to csv
write.csv(jokowi,"tweet_Mr_Jokowi.csv", row.names = FALSE)
write.table(jokowi, file = "foo.csv", sep = ",", col.names = NA,
qmethod = "double")
View(corona)
View(corona)
View(corona)
View(corona)
View(jokowi)
# Save single data object to working directory
saveRDS(jokowi,
file = "tweets_jokowi.RData")
write.csv(tweets_jokowi.RData,
file="yourCSV.csv")
write.csv(jokowi,file="yourCSV.csv")
#extract tweet #corona with number 500
corona <- search_tweets("#corona", n=500, include_rts = TRUE, lang = "id")
write.xlsx(jokowi, "data.xlsx")
require("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
require("xlsx")
write.xlsx(jokowi, "data.xlsx")
saveRDS(corona,
file = "tweets_hastag_corona.RData")
